{"version":3,"sources":["serviceWorker.ts","app/shared/components/header/Header.tsx","app/core/Disciplinas.tsx","app/core/Main.tsx","app/home/Home.tsx","app/shared/components/footer/Footer.tsx","App.tsx","app/core/Login.tsx","index.tsx","routes.tsx"],"names":["Boolean","window","location","hostname","match","Header","react_default","a","createElement","Fragment","Menu","fixed","inverted","Container","Item","header","as","Link","to","concat","process","Image","size","src","style","marginRight","position","Button","basic","Disciplinas","_ref","Main","url","Home","console","log","header_Header","text","marginTop","react_router","path","exact","component","Footer","Segment","vertical","margin","padding","textAlign","Grid","divided","stackable","Column","width","elements_Header_Header","content","List","link","Divider","section","centered","horizontal","href","App","footer_Footer","LoginForm","verticalAlign","backgroundImage","backgroundPosition","backgroundSize","backgroundRepeat","height","maxWidth","color","Form","stacked","Input","fluid","icon","iconPosition","placeholder","type","Message","routes","react_router_dom","createIndexRoutes","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.58e86b37.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\r\nimport { Menu, Button, Container, Image } from 'semantic-ui-react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst Header = () => {\r\n    return (\r\n        <>\r\n            <Menu fixed='top' inverted>\r\n                <Container>\r\n                    <Menu.Item header\r\n                        as={Link}\r\n                        to={`${process.env.PUBLIC_URL}/`}\r\n                    >\r\n                        <Image size='mini' src='https://react.semantic-ui.com/logo.png' style={{ marginRight: '1.5em' }} />\r\n                        Chronos\r\n                    </Menu.Item>\r\n                    <Menu.Menu position='right'>\r\n                        {/* futuramente o link irá mudar para a página de login e o login redireciona para o /cronograma */}\r\n                        <Menu.Item >\r\n                            <Button basic inverted\r\n                                as={Link}\r\n                                to={`${process.env.PUBLIC_URL}/entrar`}\r\n                            >\r\n                                Entrar\r\n                            </Button>\r\n                        </Menu.Item>\r\n                    </Menu.Menu>\r\n                </Container>\r\n            </Menu>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport { Button } from 'semantic-ui-react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Disciplinas({ match }: any) {\r\n    return (\r\n        <>\r\n            <Button as={Link}\r\n                to={`../cronograma`}\r\n            >\r\n                Home Cronogramas\r\n            </Button>\r\n            <h3>Hi from Disciplinas</h3>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Disciplinas\r\n","import React from 'react'\r\nimport { Button } from 'semantic-ui-react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Main({ match }: any) {\r\n    return (\r\n        <>\r\n            <Button as={Link} to={`${match.url}/disciplinas`}>\r\n                Disciplinas\r\n            </Button>\r\n            <h3>Hi from Main</h3>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Main\r\n","import React from 'react'\r\nimport { Container } from 'semantic-ui-react';\r\nimport { Route } from 'react-router-dom';\r\nimport Header from '../shared/components/header/Header';\r\nimport Disciplinas from '../core/Disciplinas';\r\nimport Main from '../core/Main';\r\n\r\nconst Home = ({ match }: any) => { //assume main component.\r\n    console.log(match);\r\n\r\n    return (\r\n        <>\r\n            <Header />\r\n            <Container text style={{ marginTop: '7em' }}>\r\n                <Route path={`${match.url}`} exact component={Main} ></Route>\r\n                <Route path={`${match.url}/disciplinas`} exact component={Disciplinas}></Route>\r\n            </Container>\r\n        </>\r\n    )\r\n};\r\n\r\nexport default Home\r\n","import React from 'react'\r\nimport { Segment, Image, Container, Grid, Header, List, Divider } from 'semantic-ui-react'\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <Segment inverted vertical style={{ margin: '5em 0em 0em', padding: '5em 0em' }}>\r\n            <Container textAlign='center'>\r\n                <Grid divided inverted stackable>\r\n                    <Grid.Column width={7}>\r\n                        <Header inverted as='h4' content='Group 1' />\r\n                        <List link inverted>\r\n                            <List.Item as='a'>Link One</List.Item>\r\n                            <List.Item as='a'>Link Two</List.Item>\r\n                            <List.Item as='a'>Link Three</List.Item>\r\n                            <List.Item as='a'>Link Four</List.Item>\r\n                        </List>\r\n                    </Grid.Column>\r\n                    <Grid.Column width={7}>\r\n                        <Header inverted as='h4' content='Footer Header' />\r\n                        <p>\r\n                            Extra space for a call to action inside the footer that could help re-engage users.\r\n                        </p>\r\n                    </Grid.Column>\r\n                </Grid>\r\n\r\n                <Divider inverted section />\r\n                <Image centered size='mini' src='/logo.png' />\r\n                <List horizontal inverted divided link size='small'>\r\n                    <List.Item as='a' href='#'>\r\n                        Site Map\r\n          </List.Item>\r\n                    <List.Item as='a' href='#'>\r\n                        Contact Us\r\n          </List.Item>\r\n                    <List.Item as='a' href='#'>\r\n                        Terms and Conditions\r\n          </List.Item>\r\n                    <List.Item as='a' href='#'>\r\n                        Privacy Policy\r\n          </List.Item>\r\n                </List>\r\n            </Container>\r\n        </Segment>\r\n    )\r\n}\r\n\r\nexport default Footer","import React from 'react';\nimport { Container, Image } from 'semantic-ui-react';\nimport Footer from './app/shared/components/footer/Footer';\nimport Header from './app/shared/components/header/Header';\n\nconst App: React.FC = () => {\n  return (\n    <>\n      <Header />\n      <Container text style={{ marginTop: '7em' }}>\n        <Image src='https://react.semantic-ui.com/images/wireframe/paragraph.png' style={{ marginTop: '2em' }} />\n        <Image src='https://react.semantic-ui.com/images/wireframe/paragraph.png' style={{ marginTop: '2em' }} />\n        <Image src='https://react.semantic-ui.com/images/wireframe/paragraph.png' style={{ marginTop: '2em' }} />\n      </Container>\n      <Footer />\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react'\r\nimport { Button, Form, Grid, Header, Image, Message, Segment } from 'semantic-ui-react'\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst LoginForm = () => (\r\n    <Grid textAlign='center' verticalAlign='middle' style={{\r\n        backgroundImage: \"url(\" + \"https://www.pixelstalk.net/wp-content/uploads/2016/11/Education-Wallpapers-HD-Free-Download.jpg\" + \")\",\r\n        backgroundPosition: 'center',\r\n        backgroundSize: 'cover',\r\n        backgroundRepeat: 'no-repeat',\r\n        height: '100vh'\r\n    }}>\r\n        <Grid.Column style={{ maxWidth: 450 }}>\r\n            <Header as='h2' color='teal' textAlign='center'>\r\n                <Image src='https://react.semantic-ui.com/logo.png' /> Log-in to your account\r\n            </Header>\r\n            <Form size='large'>\r\n                <Segment stacked>\r\n                    <Form.Input fluid icon='user' iconPosition='left' placeholder='E-mail address' />\r\n                    <Form.Input\r\n                        fluid\r\n                        icon='lock'\r\n                        iconPosition='left'\r\n                        placeholder='Password'\r\n                        type='password'\r\n                    />\r\n\r\n                    <Button\r\n                        color='teal'\r\n                        fluid\r\n                        size='large'\r\n                        as={Link}\r\n                        to={`${process.env.PUBLIC_URL}/cronograma`}>\r\n                        Login\r\n                    </Button>\r\n                </Segment>\r\n            </Form>\r\n            <Message>\r\n                New to us?\r\n            </Message>\r\n        </Grid.Column>\r\n    </Grid>\r\n)\r\n\r\nexport default LoginForm","import ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport createIndexRoutes from './routes';\n\nconst routes = createIndexRoutes()\n\nReactDOM.render(\n    routes\n    , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from 'react'\r\nimport { Route, BrowserRouter, Switch } from 'react-router-dom';\r\nimport Home from './app/home/Home';\r\nimport App from './App';\r\nimport LoginForm from './app/core/Login';\r\n\r\nconst createIndexRoutes = () => (\r\n    <BrowserRouter>\r\n        <Switch>\r\n            <Route path={`${process.env.PUBLIC_URL}/`} exact={true} component={App} />\r\n            <Route path={`${process.env.PUBLIC_URL}/cronograma`} component={Home} />\r\n            <Route path={`${process.env.PUBLIC_URL}/entrar`} component={LoginForm} />\r\n        </Switch>\r\n    </BrowserRouter>\r\n);\r\n\r\nexport default createIndexRoutes;"],"sourceRoot":""}